@model DBPracticaConLoginSearchYList.Vendedores

@{
    ViewBag.Title = "Agregar Vendedores";
}
<div class="custom">
    <h2>Agregar Vendedores</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
         
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cedula, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cedula, new { htmlAttributes = new { @class = "form-control", id = "cedula" } })
                    @Html.ValidationMessageFor(model => model.Cedula, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Salario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Salario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Salario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Activo)
                        @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class = "control-label col-md-2"> Comision por Ventas</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ComisionPorVenta,
     new List<SelectListItem>                             {
                             new SelectListItem{ Text="Seleccione % de ventas", Value = "" },
                             new SelectListItem{ Text="3%", Value = "0.03" },
                             new SelectListItem{ Text="5%", Value = "0.05" },
                             new SelectListItem{ Text="15%", Value = "0.15" },
                             new SelectListItem{ Text="20%", Value = "0.20" }
           },
              new { @class= "form-select"})
                    @*@Html.EditorFor(model => model.ComisionPorVenta, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.ComisionPorVenta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" value="Guardar" class="btn btn-default" >Guardar</button>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</div>

<script>

    let cedula1 = document.getElementById('cedula').value;

    function valida_cedula(ced) {
        var c = ced.replace(/-/g, '');
        var cedula = c.substr(0, c.length - 1);
        var verificador = c.substr(c.length - 1, 1);
        var suma = 0;
        var cedulaValida = 0;
        if (ced.length < 11) { return false; }
        for (i = 0; i < cedula.length; i++) {
            mod = "";
            if ((i % 2) == 0) { mod = 1 } else { mod = 2 }
            res = cedula.substr(i, 1) * mod;
            if (res > 9) {
                res = res.toString();
                uno = res.substr(0, 1);
                dos = res.substr(1, 1);
                res = eval(uno) + eval(dos);
            }
            suma += eval(res);
        }
        el_numero = (10 - (suma % 10)) % 10;
        if (el_numero == verificador && cedula.substr(0, 3) != "000") {
            cedulaValida = 1;
        }
        else {
            cedulaValida = 0;

        }
        return cedulaValida;
    }

    if (valida_cedula(cedula)==0) {
        
    }

</script>


